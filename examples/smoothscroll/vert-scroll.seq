;---------------------------------------;;     VERTICAL SCROLLING EXAMPLE;;;---------------------------------------         *= $1000FRAMES   = $04XSCROLLOFF = $01STARTXOFFSET = $07SCREEN   = $0400NLINES   = 6 ; LINES TO COPY (MAX 6)SCROFFS  = SCREEN+(40*(24-NLINES))NCHARS   = NLINES*40LINEOFFS = SCROFFS+NCHARSSCREENFIXMSG = SCREEN+(40*13)+12LINE1    = $2ELINE2    = $A2LINE3    = $A4         JSR $E544 ; CLEAR SCREENENDMSG         SEI       ;TURN OFF INT         LDA #$7F         LDX #$01         STA $DC0D ;TURN OFF†CIA1 INT         STA $DD0D ;TURN OFF CIA2 INT         STX $D01A ;TURN ON RASTER INT         LDA #$10         LDX #$08         LDY #$14         STA $D011 ;TEXT 24 ROWS         STX $D016 ;SINGLE COLOR 40 COL         STY $D018 ;DEFAULT TEXT VALUE         LDX #0         LDA FIXEDMESSAGELFIXMSG         AND #$3F         STA SCREENFIXMSG,X         INX         LDA FIXEDMESSAGE,X         CMP #$FF         BNE LFIXMSG         LDA #<INT1;LOW PART OF ADDR INT         LDX #>INT1;HI  PART OF ADDR INT         LDY #LINE1;LINE TO TRIGGER         STA $0314 ;STORE TO INT VECTOR         STX $0315         STY $D012 ;SET LINE TO TRIGGER         LDA $DC0D ;ACK†CIA†1 INT         LDA $DD0D ;ACK CIA 2 INT         ASL $D019 ;ACK VIC INT         CLI         JMP *INT3        ;LDA #0        ;STA $D021         DEC FRAMECOUNT         BEQ VSCROLL         LDA $D011         AND #248         ORA XOFFSET ;DO VSCROLL         STA $D011         JMP EXITINTVSCROLL         LDA #FRAMES         STA FRAMECOUNT         LDA XOFFSET         SBC #XSCROLLOFF ;PIXEL SCROLLED         TAX ; STORE BEFORE AND         AND #7         STA XOFFSET         LDA $D011         AND #248         ORA XOFFSET ;DO VSCROLL         STA $D011         CPX #$00 ; CHECK IF LESS THAN 0         BPL EXITINT         LDX #0COPYLINES         LDA SCROFFS+40,X         STA SCROFFS,X         INX         CPX #NCHARS         BNE COPYLINESGETNEWTEXT         LDX NEWCHAR   ; MSG CHAR POS         LDY #0        ; POS CNT (0-40)         LDA MESSAGE,XLTEXT         AND #$3F         STA LINEOFFS,Y         INY         INX         LDA MESSAGE,X         CMP #$FF ; END MSG LINE BYTE         BNE LTEXT         CPY #40         ;CHECK ≈œÃ         BEQ CHECKENDMSG         LDA #$20FILLSPACES        ;FILL LINE WITH SPACE         STA LINEOFFS,Y         INY         CPY #40         BNE FILLSPACESCHECKENDMSG         INX         LDA MESSAGE,X         CMP #$FF ; CHECK END OF MESSAGE         BNE STORENEWCHAR         LDX #$00 ; RESET TO START POSSTORENEWCHAR         STX NEWCHAREXITINT         LDA #<INT1;LOW PART OF ADDR INT         LDX #>INT1;HI  PART OF ADDR INT         LDY #LINE1;LINE TO TRIGGER         STA $0314 ;STORE TO INT VECTOR         STX $0315         STY $D012 ;SET LINE TO TRIGGER         ASL $D019 ;ACK INT†(RE-ENABLE)         PLA         TAY         PLA         TAX         PLA         RTI       ;RETURN FROM INTINT2         NOP         NOP         NOP         NOP         NOP         NOP         NOP         LDA #0         STA $D021         LDA #<INT3;LOW PART OF ADDR INT         LDX #>INT3;HI  PART OF ADDR INT         LDY #LINE3;LINE TO TRIGGER         STA $0314 ;STORE TO INT VECTOR         STX $0315         STY $D012 ;SET LINE TO TRIGGER         ASL $D019 ;ACK INT†(RE-ENABLE)         PLA         TAY         PLA         TAX         PLA         RTI       ;RETURN FROM INTINT1         LDA #$10         STA $D011         LDA #6         STA $D021         LDA #<INT2;LOW PART OF ADDR INT         LDX #>INT2;HI  PART OF ADDR INT         LDY #LINE2;LINE TO TRIGGER         STA $0314 ;STORE TO INT VECTOR         STX $0315         STY $D012 ;SET LINE TO TRIGGER         LDA $DC01 ;CHECK SPACE         CMP #$EF         BEQ EXITPRG         ASL $D019 ;ACK INT†(RE-ENABLE)         PLA         TAY         PLA         TAX         PLA         RTI       ;RETURN FROM INTEXITPRG         ASL $D019         PLA         TAY         PLA         TAX         PLA         RTSFRAMECOUNT         .BYTE FRAMESXOFFSET         .BYTE STARTXOFFSETNEWCHAR         .BYTE $00FIXEDMESSAGE         .TEXT "FIXED MESSAGE"         .BYTE $FFMESSAGE         .TEXT "1THIS IS FULL LINE M"         .TEXT "ESSAGE, YES 40 LINES"         .BYTE $FF         .TEXT "2.....  AN HALF LINE"         .BYTE $FF         .TEXT "3AND A FREE MESSAGE,"         .TEXT "YEAH!!!"         .BYTE $FF         .TEXT "4"         .BYTE $FF         .TEXT "5 TH LINE"         .BYTE $FF         .TEXT "6 TH LINE"         .BYTE $FF         .TEXT "7 TH LINE"         .BYTE $FF,$FF