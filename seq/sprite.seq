;---------------------------------------;;       SPRITE EXAMPLE;;;---------------------------------------     *= $1000ANIDELAY = 50/4     SEIINIT     LDA #$00     STA $D020       ; BACKGROUND COLOR     STA $D021       ; BORDER COLOR     JSR $E544       ; CLEAR SCREEN     LDA #$C8     STA $D016       ; 40 COLUMNS WIDTH     LDA #%00000001     STA $D015       ; TURN ON SPRITE 0     STA $D01C       ; SPR 0 MULTICOLOR     LDA #$0F     STA $D027       ; SPRITE 0 COLOR     LDA #$01     STA $D025       ; SPRITE EXT COL 1     LDA #$0B     STA $D026       ; SPRITE EXT COL 2     LDA #$80        ; SPR 0 DATA AT     STA $07F8       ; ADDRESS $2000     LDA #%00000000     STA $D010       ; SPR X COORD     LDA #40         ; MIN $16     STA $D000       ; SET X COORD     LDA #$32     STA $D001       ; SET Y COORD     LDA #$00     STA $D017       ; SPR DOUBLE HEIGHT     STA $D01D       ; SPR DOUBLE WIDTH     LDA #$5F     STA $0480     LDA #ANIDELAY     STA ANICNT     LDA #$07     STA $D800   ; BG COLLISION STATUS     LDA #$06     STA $D801   ; SPRITE COLLISION STATMLOOP     LDA #$FF     CMP $D012     BNE *-3     CMP $D012     BEQ *-3                   ; X CHOORD     INC SPRX     BNE SAVEXENDX     LDA $D010     EOR #$01     STA $D010SAVEX     LDA SPRX     STA $D000                   ; Y CHOORDCALCY     LDX SPRY     LDA SINEY,X     STA $D001     CPX #$14     BEQ ENDY     INC SPRY     BNE CALCANIMENDY     LDX #0     STX SPRY                   ; ANIMATIONCALCANIM     DEC ANIDELAY     BNE ENDANI     LDA #ANIDELAY     STA ANIDELAY     LDA CURSPRT     CMP #$86      ; REACHED ANI END?     BNE DOANI     LDA #$80      ; RESET ANI     BNE SAVESPRDOANI     CLC     ADC #$01SAVESPR     STA CURSPRT     STA $07F8ENDANIDETECTCOLLISION     LDA $D01F     LSR A     BCS BGCOLLISION     LDA #" "     BNE PRINTBGCOLSTSBGCOLLISION     LDA #"C"PRINTBGCOLSTS     STA $0400     LDA $D01E     LSR A     BCS SPRCOLLISION     LDA #" "     BNE PRINTSPRCOLSTSSPRCOLLISION     LDA #"C"PRINTSPRCOLSTS     STA $0401END     JMP MLOOPSPRX     .BYTE $00SPRY     .BYTE $00ANICNT     .BYTE ANIDELAYCURSPRT     .BYTE $80SINEY     ; _+9 WITH TASM 7.4 SINE ROUTINE     ; _+6 FOR IMPORT DATA FROM MEMORY     ; SINE FROM $40 TO $50 LEN=$14     .BYTE $45,$43,$41,$40,$40,$40     .BYTE $41,$43,$45,$48,$4A,$4C     .BYTE $4E,$4F,$4F,$4F,$4E,$4C     .BYTE $4A,$48     *= $2000         ; SPRITE 0     .BYTE $0F,$FF,$00,$05     .BYTE $55,$50,$0A,$AA     .BYTE $A8,$0F,$FF,$FF     .BYTE $00,$DB,$00,$3F     .BYTE $9C,$00,$3E,$6F     .BYTE $00,$35,$6B,$F0     .BYTE $FF,$AE,$AC,$AA     .BYTE $9A,$6B,$56,$59     .BYTE $5B,$AA,$9A,$6B     .BYTE $FF,$AE,$AC,$35     .BYTE $6B,$F0,$3E,$6F     .BYTE $00,$3F,$9C,$00     .BYTE $00,$DB,$00,$0F     .BYTE $FF,$FF,$05,$55     .BYTE $54,$0A,$AA,$A0     .BYTE $0F,$FF,$00,$8F         ; SPRITE 1     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$0F,$FF,$00     .BYTE $05,$55,$54,$0A     .BYTE $9A,$AA,$0F,$6F     .BYTE $FF,$3F,$AB,$00     .BYTE $FF,$AF,$F0,$56     .BYTE $9A,$6C,$AA,$59     .BYTE $5B,$AA,$9A,$6B     .BYTE $FF,$6F,$FC,$3E     .BYTE $9B,$F0,$0F,$FF     .BYTE $FF,$05,$55,$55     .BYTE $0A,$AA,$A8,$0F     .BYTE $FF,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F         ; SPRITE 2     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$0F,$FF     .BYTE $C0,$05,$57,$F5     .BYTE $FF,$EE,$6E,$BF     .BYTE $B9,$5B,$BE,$5A     .BYTE $6B,$7F,$FF,$FC     .BYTE $F5,$55,$55,$0A     .BYTE $AA,$AA,$0F,$FF     .BYTE $C0,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F         ; SPRITE 3     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$03,$F0     .BYTE $FF,$FE,$6C,$BF     .BYTE $FF,$EB,$75,$55     .BYTE $55,$BA,$AA,$AA     .BYTE $FF,$FF,$C0,$3F     .BYTE $C0,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F         ; SPRITE 4     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$0F,$FF,$C0     .BYTE $F5,$55,$55,$7A     .BYTE $AA,$AA,$BF,$FF     .BYTE $DB,$BA,$FE,$AF     .BYTE $FF,$AF,$FE,$00     .BYTE $FF,$C0,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F         ; SPRITE 5     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$0F     .BYTE $FF,$00,$05,$55     .BYTE $54,$3A,$AA,$AA     .BYTE $FF,$FF,$FF,$BE     .BYTE $9A,$6C,$AA,$59     .BYTE $5B,$7E,$9E,$AF     .BYTE $FF,$6E,$BF,$35     .BYTE $57,$F5,$0A,$AA     .BYTE $A8,$0F,$FF,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F         ; SPRITE 6     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$0F,$FF,$00     .BYTE $05,$55,$54,$0A     .BYTE $AA,$AA,$0F,$FF     .BYTE $FF,$0F,$6B,$C0     .BYTE $FF,$AF,$F0,$AB     .BYTE $9A,$6C,$AA,$59     .BYTE $5B,$56,$9A,$6B     .BYTE $FF,$AE,$AC,$3F     .BYTE $6B,$F0,$0F,$DF     .BYTE $FF,$05,$55,$55     .BYTE $0A,$AA,$A8,$0F     .BYTE $FF,$00,$00,$00     .BYTE $00,$00,$00,$00     .BYTE $00,$00,$00,$8F     *= $3000     ; _+9 WITH TASM 7.4     ; SINE FROM $40 TO $50 LEN=$14     .BYTE $45,$43,$41,$40,$40,$40     .BYTE $41,$43,$45,$48,$4A,$4C     .BYTE $4E,$4F,$4F,$4F,$4E,$4C     .BYTE $4A,$48